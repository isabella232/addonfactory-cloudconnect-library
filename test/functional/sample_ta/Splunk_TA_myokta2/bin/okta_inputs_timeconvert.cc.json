{
    "meta": {
        "apiVersion": "1.0.0"
    },
    "tokens": [
        "name",
        "event_metrics",
        "limit_count",
        "event_id",
        "api_key",
        "index",
        "sourcetype",
        "source",
        "__settings__.proxy.proxy_enabled",
        "__settings__.proxy.proxy_url",
        "__settings__.proxy.proxy_username",
        "__settings__.proxy.proxy_password",
        "__settings__.proxy.proxy_rdns",
        "__settings__.proxy.proxy_type",
        "__settings__.logging.loglevel",
        "account.okta_url"
    ],
    "global_settings": {
        "proxy": {
            "enabled": "{{__settings__.proxy.proxy_enabled}}",
            "host": "{{__settings__.proxy.proxy_url}}",
            "port": "{{__settings__.proxy.proxy_port}}",
            "username": "{{__settings__.proxy.proxy_username}}",
            "password": "{{__settings__.proxy.proxy_password}}",
            "rdns": "{{__settings__.proxy.proxy_rdns}}",
            "type": "{{__settings__.proxy.proxy_type}}"
        },
        "logging": {
            "level": "{{__settings__.logging.loglevel}}"
        }
    },
    "requests": [
        {
            "request": {
                "url": "{{account.okta_url}}/api/v1/{{event_metrics}}?after={{event_id}}&limit={{limit_count}}{{xyz}}",
                "method": "GET",
                "headers": {
                    "Accept": "application/json",
                    "Content-Type": "application/json",
                    "Authorization": "SSWS {{api_key}}"

                }
            },
            "pre_process": {},
            "post_process": {
                "skip_conditions": [
                    {
                        "input": [
                            "{{__response__.body}}",
                            "$"
                        ],
                        "method": "json_empty"
                    }
                ],
                "pipeline": [
                    {
                        "input": [
                            "{{__response__.body}}",
                            "$[-1].published"
                        ],
                        "method": "json_path",
                        "output": "my_time"
                    },
                    {
                        "input": [
                            "{{my_time}}",
                            "%Y-%m-%dT%H:%M:%S.%fZ",
                            "%s"
                        ],
                        "method": "time_str2str",
                        "output": "xyz"
                    },
                    {
                        "input": [
                            "{{__response__.body}}",
                            "$[-1].eventId[*]"
                        ],
                        "method": "json_path",
                        "output": "event_id"
                    },

                    {
                        "input": [
                            "{{__response__.body}}",
                            "$"
                        ],
                        "method": "json_path",
                        "output": "__stdout__"
                    },
                    {
                        "input": [
                            "{{__stdout__}}",
                            "",
                            "{{index}}",
                            "{{host}}",
                            "{{source}}",
                            "{{sourcetype}}"
                        ],
                        "method": "splunk_xml",
                        "output": "__stdout__"
                    },
                    {
                        "input": [
                            "{{__stdout__}}"
                        ],
                        "method": "std_output"
                    },
                    {
                        "input": [
                            "{{xyz}}",
                            "",
                            "{{index}}",
                            "{{host}}",
                            "clorist_time",
                            "clorist_time"
                        ],
                        "method": "splunk_xml",
                        "output": "xyz_time"
                    },
                    {
                        "input": [
                            "{{xyz_time}}"
                        ],
                        "method": "std_output"
                    }
                ]
            },
            "iteration_mode": {
                "iteration_count": "1",
                "stop_conditions": [
                    {
                        "input": [
                            "{{__response__.body}}",
                            "$"
                        ],
                        "method": "json_empty"
                    }
                ]
            },
        "checkpoint": {
                "content": {
                    "event_id": "{{event_id}}",
		    "xyz": "{{xyz}}"
                }
            }
        }
    ]
}
